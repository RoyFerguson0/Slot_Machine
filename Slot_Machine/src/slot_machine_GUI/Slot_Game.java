/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package slot_machine_GUI;

import java.awt.Image;
import java.util.Random;
import java.util.Scanner;
import javax.swing.*;

/**
 *
 * @author Roy Ferguson
 */
public class Slot_Game extends javax.swing.JFrame {

    /**
     * Creates new form Slot_Game
     */
    public Slot_Game() {
        initComponents();

        // Setting Token Count
        appData.game.setTokenCount(5);
        lblSpinsLeft.setText("You have " + appData.game.getTokenCount() + " token(s) left!!");
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/lever.jpg"));
        //Gets the image 
        Image img = icon.getImage();
        //Used to scale the image to fit within the label
        Image imgScale = img.getScaledInstance(lblBackground.getWidth(), lblBackground.getHeight(), Image.SCALE_SMOOTH);
        //creates a new image with the new scale
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        //sets the scaled image within the label
        lblBackground.setIcon(scaledIcon);
        
        // Hiding the button so you see the lever instead of a white box.
        btnPull.setOpaque(false);
        btnPull.setContentAreaFilled(false);
        btnPull.setBorderPainted(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBorder = new javax.swing.JPanel();
        btnPull = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        lblSymbol3 = new javax.swing.JLabel();
        lblSymbol2 = new javax.swing.JLabel();
        lblSymbol1 = new javax.swing.JLabel();
        lblSpinsLeft = new javax.swing.JLabel();
        lblWinnings = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBorder.setLayout(null);

        btnPull.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPullActionPerformed(evt);
            }
        });
        pnlBorder.add(btnPull);
        btnPull.setBounds(480, 120, 60, 200);

        btnQuit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuit.setText("Quit");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });
        pnlBorder.add(btnQuit);
        btnQuit.setBounds(260, 440, 72, 22);

        lblSymbol3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSymbol3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlBorder.add(lblSymbol3);
        lblSymbol3.setBounds(360, 200, 86, 108);

        lblSymbol2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSymbol2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlBorder.add(lblSymbol2);
        lblSymbol2.setBounds(250, 200, 86, 108);

        lblSymbol1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSymbol1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlBorder.add(lblSymbol1);
        lblSymbol1.setBounds(140, 200, 86, 108);

        lblSpinsLeft.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        lblSpinsLeft.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlBorder.add(lblSpinsLeft);
        lblSpinsLeft.setBounds(56, 80, 512, 44);

        lblWinnings.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblWinnings.setForeground(new java.awt.Color(255, 0, 51));
        lblWinnings.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlBorder.add(lblWinnings);
        lblWinnings.setBounds(60, 370, 450, 40);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lever.jpg"))); // NOI18N
        pnlBorder.add(lblBackground);
        lblBackground.setBounds(0, 0, 600, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(614, 507));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPullActionPerformed
        // TODO add your handling code here:

        // Code runs if you have got more than zero tokens.
        if(appData.game.getTokenCount() > 0) {
            // Storing the token count in TheTokenCount variable.
            int TheTokenCount = appData.game.getTokenCount();
            TheTokenCount--;
            // Setting the New Token Count
            appData.game.setTokenCount(TheTokenCount);

            // Calls another method/function called play_slots which updates the tokenCount
            TheTokenCount = play_slots(TheTokenCount);

            // Output the number of tokens the user has.
            lblSpinsLeft.setText("You have " + TheTokenCount + " token(s) left!!");

            // Setting the New Token Count after adding any winnings.
            appData.game.setTokenCount(TheTokenCount);
        }else {
            // When you have no tokens left there will be a pop up asking if you wish to restart.
            var yesOrNo = JOptionPane.showConfirmDialog(null, "No tokens left thanks for playing.\nWould you like to restart?","Information",JOptionPane.YES_NO_OPTION);

            // If answer is Yes.
            // Reset token count to 5 and update the label for number of spins left.
            if(yesOrNo == 0){
                appData.game.setTokenCount(5);
                lblSpinsLeft.setText("You have " + appData.game.getTokenCount() + " token(s) left!!");
            }
        }

    }//GEN-LAST:event_btnPullActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        // TODO add your handling code here:

        // Close Slot Game Form
        // Open Home Form
        this.dispose();
        new Home().setVisible(true);
    }//GEN-LAST:event_btnQuitActionPerformed

    
    
    public int play_slots(int tokenCount){
        // Initialising the winnings variable.
        int winnings = 0;

        // Storing the three random symbols by calling the randomSymbol method/function
        String randomSymbol1 = randomSymbol();
        String randomSymbol2 = randomSymbol();
        String randomSymbol3 = randomSymbol();

        // Depending on the symbols, it will set the winnings.
        if(randomSymbol1.equals("&") && randomSymbol2.equals("&") && randomSymbol3.equals("&")){
            winnings = 3;
        }else if (randomSymbol1.equals("$") && randomSymbol2.equals("$") && randomSymbol3.equals("$")){
            winnings = 4;
        }else if(randomSymbol1.equals("£") && randomSymbol2.equals("£") && randomSymbol3.equals("£")){
            winnings = 5;
        }else if(randomSymbol1.equals("£") && randomSymbol2.equals("&") && randomSymbol3.equals("$")){
            winnings = 1;
        }else if(randomSymbol1.equals("£") && randomSymbol2.equals("$") && randomSymbol3.equals("&")){
            winnings = 1;
        }else if(randomSymbol1.equals("&") && randomSymbol2.equals("£") && randomSymbol3.equals("$")){
            winnings = 1;
        }else if(randomSymbol1.equals("&") && randomSymbol2.equals("$") && randomSymbol3.equals("£")){
            winnings = 1;
        }else if(randomSymbol1.equals("$") && randomSymbol2.equals("£") && randomSymbol3.equals("&")){
            winnings = 1;
        }else if(randomSymbol1.equals("$") && randomSymbol2.equals("&") && randomSymbol3.equals("£")){
            winnings = 1;
        }else {
            winnings = 0;
        }

        // Outputs the three random symbols into the labels.
        lblSymbol1.setText(randomSymbol1);
        lblSymbol2.setText(randomSymbol2);
        lblSymbol3.setText(randomSymbol3);


        // If you get anything other than zero winnings you will get a congratulations message.
        if(winnings != 0) {
           // JOptionPane.showMessageDialog(null,"*** Congratulations you won " + winnings + " token(s) ***");
            lblWinnings.setText("*** Congratulations you won " + winnings + " token(s) ***");
        }else{
            // If you get zero winnings.
            lblWinnings.setText("*** No Win this Spin ***");
        }
        // Returning the new tokenCount
        return (tokenCount + winnings);
    }

    public static String randomSymbol(){
        // Initialising playerSymbol and num
        String playerSymbol = "";
        int num = 0;

        // Creating a random number
        Random random = new Random();

        while(true) {
            // Random number will either be 0,1,2,3
            num = random.nextInt(4);
            // If it is zero the while loop repeats it's self again until the random number is not zero.
            // Then it breaks while loop.
            if(num != 0) break;
        }

        // Each number is represented by a symbol.
        if(num == 1){
            playerSymbol = "&";
        }else if (num == 2){
            playerSymbol = "$";
        }else if (num == 3){
            playerSymbol = "£";
        }else{
            playerSymbol = "Error";
        }

        // Returning the Symbol
        return playerSymbol;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Slot_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Slot_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Slot_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Slot_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Slot_Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPull;
    private javax.swing.JButton btnQuit;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblSpinsLeft;
    private javax.swing.JLabel lblSymbol1;
    private javax.swing.JLabel lblSymbol2;
    private javax.swing.JLabel lblSymbol3;
    private javax.swing.JLabel lblWinnings;
    private javax.swing.JPanel pnlBorder;
    // End of variables declaration//GEN-END:variables
}
